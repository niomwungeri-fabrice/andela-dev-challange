{"version":3,"sources":["Parcel-controller.js"],"names":["Parcels","create","req","res","body","location","destination","length","width","height","ownerId","status","newParcel","Parcel","Date","createQuery","db","query","Object","values","rows","send","error","getAll","findAllQuery","rowCount","parcelByUser","parcelByUserQuery","params","userId","getOne","text","parcelId","message","cancel","findOneQuery","updateOneQuery","id","created_date","updateValues","response","err","presentLocation"],"mappings":"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","file":"Parcel-controller.js","sourceRoot":"/home/inyenyeri/Downloads/JavaScript/andela-dev-challange/src/controller","sourcesContent":["/* Code modified from a file obtained from https://github.com/olawalejarvis/reflection_app_server */\nimport moment from 'moment';\nimport uuidv4 from 'uuid/v4';\nimport db from '../db';\nimport Parcel from '../model/parcel';\n\nconst Parcels = {\n  // Create a parcel delivery order\n  async create(req, res) {\n    const {\n      location, destination, length, width, height, ownerId, status,\n    } = req.body;\n\n    const newParcel = new Parcel(uuidv4(), location, destination, length, width, height,\n      ownerId, status, moment(new Date()), moment(new Date()));\n    const createQuery = `INSERT INTO\n      parcels(id, location, destination, length, width, height, owner_id, status, created_date, modified_date)\n      VALUES($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)\n      returning *`;\n    try {\n      const { rows } = await db.query(createQuery, Object.values(newParcel));\n      return res.status(201).send(rows[0]);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  // Fetch all parcel delivery orders\n  async getAll(req, res) {\n    const findAllQuery = 'SELECT * FROM parcels';\n    try {\n      const { rows, rowCount } = await db.query(findAllQuery);\n      return res.status(200).send({ rows, rowCount });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  // Fetch all parcel delivery orders by a specific user\n  async parcelByUser(req, res) {\n    const parcelByUserQuery = 'SELECT * FROM parcels where owner_id = $1';\n    try {\n      const { rows, rowCount } = await db.query(parcelByUserQuery, [req.params.userId]);\n      return res.status(200).send({ rows, rowCount });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  // Fetch a specific parcel delivery order\n  async getOne(req, res) {\n    const text = 'SELECT * FROM parcels WHERE id = $1';\n    try {\n      const { rows } = await db.query(text, [req.params.parcelId]);\n      if (!rows[0]) {\n        return res.status(404).send({ message: 'parcels not found' });\n      }\n      return res.status(200).send(rows[0]);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  // Cancel the specific parcel delivery order\n  async cancel(req, res) {\n    const findOneQuery = 'SELECT * FROM parcels WHERE id = $1';\n    const updateOneQuery = `UPDATE parcels\n      SET status=$1,modified_date=$2\n      WHERE id=$3 returning *`;\n    try {\n      const { rows } = await db.query(findOneQuery, [req.params.parcelId]);\n      if (!rows[0]) {\n        return res.status(404).send({ message: 'parcel not found' });\n      }\n      const newParcel = new Parcel(rows[0].id, rows[0].location, rows[0].destination,\n        rows[0].length, rows[0].width, rows[0].height, rows[0].ownerId, rows[0].status,\n        rows[0].created_date, moment(new Date()));\n      const updateValues = [\n        'Canceled',\n        moment(new Date()),\n        rows[0].id,\n      ];\n      const response = await db.query(updateOneQuery, updateValues);\n      return res.status(200).send(response.rows[0]);\n    } catch (err) {\n      return res.status(400).send(err);\n    }\n  },\n  // Change the present location of a specific parcel delivery order\n  async presentLocation(req, res) {\n    return res.status(200).send({ message: 'presentLocation' });\n  },\n  // Change the location ofa specific parcel delivery order -\n  // only for the user who created it\n  async destination(req, res) {\n    return res.status(200).send({ message: 'destination' });\n  },\n  // Change the status of a specific parcel delivery order -\n  // This endpoint should be accessible by the Admin only\n  async status(req, res) {\n    return res.status().send({ message: 'status' });\n  },\n};\n\nexport default Parcels;\n"]}